# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª-–≤–æ –ø–µ—à–µ–∫ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
def count_pawns(field, team):
	sym = 'üî∫' if team == 'red' else 'üîπ'
	field_arr = []

	for raw in field:
		for pawn in raw:
			field_arr.append(pawn)

	return field_arr.count(sym)

# —Ñ—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç –≤–æ–∑–º–æ–∂–Ω—É—é –æ—à–∏–±–∫—É, —Å–ª—É–∂–∏—Ç –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∫–æ–¥–∞	
def catch(game, x, y):
	try:
		return game.field[y][x]
	except IndexError:
		return None

# –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
def enemy(team):
	return 'blue' if team == 'red' else 'red'

# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∞—Ä–∏–∞—Ü–∏—é —Å–ª–æ–≤–∞ "–ø–µ—à–∫–∞" –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —á–∏—Å–ª–∞
def string_num(num):
	if num == 1:
		return '–ø–µ—à–∫–∞'
	elif num in [2, 3, 4]:
		return '–ø–µ—à–∫–∏'
	else:
		return '–ø–µ—à–µ–∫'

# —É–ø—Ä–æ—â–∞–µ—Ç –∫–æ–¥ –≥–¥–µ –Ω—É–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å –∫–æ–ª-–≤–æ –ø–µ—à–µ–∫ –≤ –∑–∞–º–∫–µ
# –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "–∑–∞–º–æ–∫ —Ä–∞–∑—Ä—É—à–µ–Ω" –µ—Å–ª–∏ –æ–Ω —Ä–∞–∑—Ä—É—à–µ–Ω
def castle_pawns_count(game, team):
	if team == 'red' and game.red_alive:
		return f'{game.red_castle} {string_num(game.red_castle)}'
	elif team == 'blue' and game.blue_alive:
		return f'{game.blue_castle} {string_num(game.blue_castle)}'
	else:
		return '–∑–∞–º–æ–∫ —Ä–∞–∑—Ä—É—à–µ–Ω'